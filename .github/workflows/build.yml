name: build
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  build-node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm run build
      - name: Upload node files
        uses: actions/upload-artifact@v2
        with:
          name: tools
          path: out/compiled/*
  build-zipfile-win:
    runs-on: ubuntu-latest
    steps:
      - name: Install mingw
        run: sudo apt-get install gcc-mingw-w64
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            zipfile/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target x86_64-pc-windows-gnu --manifest-path=zipfile/Cargo.toml
      - name: Show content
        run: find .
      - name: Upload library
        uses: actions/upload-artifact@v2
        with:
          name: zipfile.dll
          path: zipfile/target/x86_64-pc-windows-gnu/release/zipfile.dll
  
  build-zipfile-osx:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            zipfile/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --manifest-path=zipfile/Cargo.toml
      - name: Show content
        run: find .
      - name: Upload library
        uses: actions/upload-artifact@v2
        with:
          name: zipfile.dylib
          path: zipfile/target/release/libzipfile.dylib
  archive:
    runs-on: ubuntu-latest
    needs: [build-node, build-zipfile-win, build-zipfile-osx]
    steps:
      - uses: actions/checkout@v2
      - name: Download compiled js
        uses: actions/download-artifact@v2
        with:
          name: tools
          path: commands
      - name: Download zipfile.dll
        uses: actions/download-artifact@v2
        with:
          name: zipfile.dll
          path: lib
      - name: Download zipfile.dylib
        uses: actions/download-artifact@v2
        with:
          name: zipfile.dylib
          path: lib
      - name: Move libzipfile.dylib to archive
        run: mv lib/libzipfile.dylib "funexpected-tools/External Libraries/ZipFile.bundle/Contents/MacOS/ZipFile"
      - name: Move zipfile.dll to archive
        run: mv lib/zipfile.dll "funexpected-tools/External Libraries/ZipFile.dll"
      - name: Move commands to archive
        run: mv commands/* funexpected-tools/Commands/
      
        - name: Compress release
        run: zip -r funexpected-tools funexpected-tools
      
        - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./funexpected-tools.zip
          asset_name: funexpected-tools.zip
          asset_content_type: application/zip


      - name: Show contents
        run: find .
      
